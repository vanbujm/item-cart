version: 2
jobs:
  build:
    working_directory: ~/react_rails
    docker:
      - image: circleci/ruby:2.4.1-node
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: react_rails_test
    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
            - rails-demo-

      # Bundle install dependencies
      - run:
          name: Install ruby dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      # Yarn install dependencies
      - run:
          name: Install javascript dependencies
          command: ./bin/yarn install --cache-folder yarn-cache

      - run:
          name: install postgres client
          command: sudo apt install postgresql-client

      # Store bundle cache
      - save_cache:
          key: rails-demo-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
          paths:
            - vendor/bundle
            - node_modules
            - yarn-cache

      - run:
          name: Database Setup
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run rails tests
          command: bin/rails test
      - run:
          name: run javascript tests
          command: yarn test

      # Save artifacts
      - store_test_results:
          path: /tmp/test-results

      # collect reports
      - store_test_results:
          path: tmp/test-results
      - store_artifacts:
          path: tmp/test-results
          destination: test-results

      # Save artifacts
      - store_test_results:
          path: /tmp/test-results

      # deploy to heroku
      - run:
          name: setup heroku
          command: bash .circleci/setup-heroku.sh

      - deploy:
          name: Deploy Master to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push heroku master
              heroku restart
            fi