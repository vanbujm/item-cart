defaults: &defaults
  working_directory: ~/react_rails
  docker:
    - image: circleci/ruby:2.4.1-node
      environment:
        RAILS_ENV: test
        PGHOST: 127.0.0.1
        PGUSER: root
    - image: circleci/postgres:9.6.2-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: react_rails_test

version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install postgres client
          command: sudo apt install postgresql-client
      - save_cache:
          key: rails-react-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/react_rails

  bundle_rails_dependencies:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - rails-react-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install ruby dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: rails-react-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  bundle_javascript_dependencies:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - rails-react-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "yarn.lock" }}
      - run:
          name: Install javascript dependencies
          command: ./bin/yarn install --cache-folder yarn-cache
      - save_cache:
          key: rails-react-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - yarn-cache

  rails_tests:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - rails-react-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "yarn.lock" }}
      - run:
          name: bundle
          command: bundle --path=vendor/bundle
      - run:
          name: yarn
          command: yarn --cache-folder yarn-cache
      - run:
          name: database setup
          command: |
            bundle exec rails db:create
            bundle exec rails db:schema:load
      - run:
          name: run rails tests
          command: bin/rails test

  javascript_tests:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - rails-react-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "yarn.lock" }}
      - run:
          name: run javascript tests
          command: yarn test

  precompile_assets:
    <<: *defaults
    steps:
      - restore_cache:
          keys:
            - rails-react-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "yarn.lock" }}
      - run:
          name: bundle
          command: bundle --path=vendor/bundle
      - run:
          name: yarn
          command: yarn --cache-folder yarn-cache
      - run:
          name: Precompile assets
          command: bundle exec rails assets:precompile
      - save_cache:
          key: - rails-react-assets-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/rails-react/public/

  deploy:
    machine:
        enabled: true
    working_directory: ~/react_rails
    environment:
      - HEROKU_APP: react-rails-nopsema
    steps:
      - restore_cache:
          keys:
            - rails-react-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          keys:
            - rails-react-{{ checksum "yarn.lock" }}
      - restore_cache:
          keys:
            - rails-react-assets-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Setup Heroku
          command: bash .circleci/setup-heroku.sh
      - run:
          name: Push to Heroku
          command: |
            git push heroku master
            heroku run rails db:migrate
            sleep 5 # sleep for 5 seconds to wait for dynos
            heroku restart

workflows:
   version: 2
   build-and-deploy:
     jobs:
       - checkout_code
       - bundle_rails_dependencies:
           requires:
             - checkout_code
       - bundle_javascript_dependencies:
           requires:
             - checkout_code
       - javascript_tests:
           requires:
             - bundle_javascript_dependencies
       - rails_tests:
           requires:
             - bundle_rails_dependencies
             - bundle_javascript_dependencies
       - precompile_assets:
           requires:
             - bundle_rails_dependencies
             - bundle_javascript_dependencies
       - deploy:
           requires:
             - rails_tests
             - javascript_tests
             - precompile_assets